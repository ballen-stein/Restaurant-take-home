// Generated by Dagger (https://dagger.dev).
package com.company.takehome.views.fragment;

import com.company.takehome.network.places.PlacesRestaurantService;
import com.company.takehome.network.yelp.YelpRestaurantService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragmentViewModel_Factory implements Factory<MainFragmentViewModel> {
  private final Provider<YelpRestaurantService> yelpManagerProvider;

  private final Provider<PlacesRestaurantService> placesRestaurantApiProvider;

  public MainFragmentViewModel_Factory(Provider<YelpRestaurantService> yelpManagerProvider,
      Provider<PlacesRestaurantService> placesRestaurantApiProvider) {
    this.yelpManagerProvider = yelpManagerProvider;
    this.placesRestaurantApiProvider = placesRestaurantApiProvider;
  }

  @Override
  public MainFragmentViewModel get() {
    return newInstance(yelpManagerProvider.get(), placesRestaurantApiProvider.get());
  }

  public static MainFragmentViewModel_Factory create(
      Provider<YelpRestaurantService> yelpManagerProvider,
      Provider<PlacesRestaurantService> placesRestaurantApiProvider) {
    return new MainFragmentViewModel_Factory(yelpManagerProvider, placesRestaurantApiProvider);
  }

  public static MainFragmentViewModel newInstance(YelpRestaurantService yelpManager,
      PlacesRestaurantService placesRestaurantApi) {
    return new MainFragmentViewModel(yelpManager, placesRestaurantApi);
  }
}
