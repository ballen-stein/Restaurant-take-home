// Generated by Dagger (https://dagger.dev).
package com.company.takehome.network;

import com.company.takehome.network.places.PlacesRestaurantService;
import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_PlacesRestaurantServiceFactory implements Factory<PlacesRestaurantService> {
  private final ApiModule module;

  private final Provider<Moshi> moshiProvider;

  public ApiModule_PlacesRestaurantServiceFactory(ApiModule module, Provider<Moshi> moshiProvider) {
    this.module = module;
    this.moshiProvider = moshiProvider;
  }

  @Override
  public PlacesRestaurantService get() {
    return placesRestaurantService(module, moshiProvider.get());
  }

  public static ApiModule_PlacesRestaurantServiceFactory create(ApiModule module,
      Provider<Moshi> moshiProvider) {
    return new ApiModule_PlacesRestaurantServiceFactory(module, moshiProvider);
  }

  public static PlacesRestaurantService placesRestaurantService(ApiModule instance, Moshi moshi) {
    return Preconditions.checkNotNullFromProvides(instance.placesRestaurantService(moshi));
  }
}
